package edu.ncsu.csc.itrust.dao.mysql;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import edu.ncsu.csc.itrust.DBUtil;
import edu.ncsu.csc.itrust.beans.DeathStatsBean;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.exception.DBException;

public class DeathStatsDAO {
	private DAOFactory factory;

	public enum GenderType {
		All, Male, Female
	}

	public DeathStatsDAO(DAOFactory factory) {
		this.factory = factory;
	}

	public List<DeathStatsBean> getTopCauses(GenderType gender, int startDate,
			int endDate, int limit) throws DBException {
		List<DeathStatsBean> deathStats = new ArrayList<DeathStatsBean>();
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		try {
			conn = factory.getConnection();
			String statement = "Select COD.CauseOfDeath, icdcodes.Description, COD.numberDead "
					+ "from (Select CauseOfDeath, count(*) as numberDead "
					+ "from patients where DateOfDeath is not null "
					+ "and DateOfDeath > date(?) and DateOfDeath < date(?) ";
			switch (gender) {
			case Male:
				statement += "and patients.Gender = \"Male\" ";
				break;
			case Female:
				statement += "and patients.Gender = \"Female\" ";
				break;
			}
			statement += "group by CauseOfDeath) as COD "
					+ "join icdcodes on COD.CauseOfDeath = icdcodes.Code "
					+ "order by numberDead Desc ";
			if (limit > 0)
				statement += "limit ?";
			ps = conn.prepareStatement(statement);
			ps.setString(1, startDate + "-1-1");
			ps.setString(2, (endDate) + "-12-31");
			if (limit > 0)
				ps.setInt(3, limit);
			System.out.println("prepared");
			rs = ps.executeQuery();
			System.out.println("executed");
			while (rs.next()) {
				DeathStatsBean ds = new DeathStatsBean();
				ds.setDescription(rs.getString("Description"));
				ds.setCode(rs.getString("CauseOfDeath"));
				ds.setCount(rs.getInt("numberDead"));
			}
			rs.close();
			return deathStats;
		} catch (SQLException e) {
			throw new DBException(e);
		} finally {
			DBUtil.closeConnection(conn, ps);
		}
	}
}
