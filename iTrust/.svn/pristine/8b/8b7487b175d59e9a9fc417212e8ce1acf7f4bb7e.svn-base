package edu.ncsu.csc.itrust.action;

import junit.framework.TestCase;
import edu.ncsu.csc.itrust.dao.DAOFactory;
import edu.ncsu.csc.itrust.datagenerators.TestDataGenerator;
import edu.ncsu.csc.itrust.exception.ITrustException;
import edu.ncsu.csc.itrust.testutils.TestDAOFactory;

/**
 * GetVisitRemindersActionTest
 */
public class SendRemindersActionTest extends TestCase {
	private DAOFactory factory = TestDAOFactory.getTestInstance();
	private SendVisitRemindersAction action;
	private TestDataGenerator gen = new TestDataGenerator();

	@Override
	protected void setUp() throws Exception {
		gen.clearAllTables();
	}

	/**
	 * testNormalReturn
	 * @throws Exception
	 */
	public void testNormalReturn() throws Exception {
		//Test that no exceptions are thrown on method call
		//check valid data returns
		gen.standardData();
		//Login as kelly doctor
		action = new SendVisitRemindersAction(factory, 9000000000L);
		
		action.sendVisitReminders(SendVisitRemindersAction.ReminderType.DIAGNOSED_CARE_NEEDERS);
		action.sendVisitReminders(SendVisitRemindersAction.ReminderType.DIAGNOSED_CARE_NEEDERS,30);
	}	
	
	
	
	
	/**
	 * testGetReminderType
	 * @throws Exception
	 */
	public void testSendReminderType() throws Exception {
		//Test that Enum->String translation works properly
		gen.standardData();
		//Login as kelly doctor
		action = new SendVisitRemindersAction(factory, 9000000000L);
		
		assertEquals(SendVisitRemindersAction.ReminderType.DIAGNOSED_CARE_NEEDERS, 
					 SendVisitRemindersAction.ReminderType.getReminderType("Diagnosed Care Needers"));
	}
	
	/**
	 * testBadReminderType
	 * @throws Exception
	 */
	public void testBadReminderType() throws Exception {
		//Test that a null ReminderType is not allowed
		//Check other failure inputs
		gen.standardData();
		//Login as kelly doctor
		action = new SendVisitRemindersAction(factory, 9000000000L);
		try {
			action.sendVisitReminders(null);
			fail("testBadReminderType: bad reminder type not caught");
		} catch(ITrustException e) {
			assertEquals("Reminder Type DNE", e.getMessage());
		}
		try {
			action.sendVisitReminders(null,0);
			fail("testBadReminderType: bad reminder type not caught");
		} catch(ITrustException e) {
			assertEquals("Reminder Type DNE", e.getMessage());
		}
	}


}
